<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Reply-Mapper">

	<select id="selectReplySeqNextValue" resultType="int" >
		select annapharminanswer_num_seq.nextval
		from dual
	</select>

	<select id="selectReplyList" resultType="reply" parameterType="member">
select *
from
(select e.CHEMIST_IN_CODE, e.CHEMIST_CODE, e.CHEMIST_IN_REPLY, e.CHEMIST_IN_ADOPT, e.CHEMIST_ANS_CODE, e.ANS_DATE, NVL(e.COUNT1,0) as CHEMIST_ANS_LIKE, e.LIKE_CHECK
 from(
 select a.CHEMIST_ANS_CODE, a.CHEMIST_IN_CODE, b.MEM_ID, a.CHEMIST_CODE, a.CHEMIST_IN_REPLY, a.CHEMIST_IN_ADOPT, a.ANS_DATE
    ,RANK() OVER (PARTITION BY a.CHEMIST_ANS_CODE ORDER BY b.MEM_ID DESC) RANK1
    , d.COUNT1
    , d.LIKE_CHECK
		from che_in_ans a LEFT OUTER JOIN CHE_IN_RECOM b
                on a.CHEMIST_ANS_CODE = b.CHEMIST_ANS_CODE
        LEFT OUTER JOIN ( SELECT COUNT1, V.CHEMIST_ANS_CODE, NVL(COUNT2,0) AS LIKE_CHECK
        FROM (SELECT COUNT(*) AS COUNT1, CHEMIST_ANS_CODE FROM CHE_IN_RECOM
                GROUP BY CHEMIST_ANS_CODE) V
                LEFT OUTER JOIN (SELECT COUNT(*) AS COUNT2,CHEMIST_ANS_CODE FROM CHE_IN_RECOM WHERE MEM_ID=#{memId} GROUP BY CHEMIST_ANS_CODE)N
                ON V.CHEMIST_ANS_CODE = N.CHEMIST_ANS_CODE)d
                on b.CHEMIST_ANS_CODE = d.CHEMIST_ANS_CODE
) e
where e.RANK1 =1 and e.chemist_in_code = #{chemistInCode}
order by e.CHEMIST_IN_ADOPT desc, e.chemist_ans_code asc)f, CHEMIST g, MEMBER t
where f.CHEMIST_CODE = g.CHEMIST_CODE and t.MEM_ID = g.MEM_ID

	</select>


		<select id="selectReplyList2" resultType="reply" parameterType="member">
 select *
from (select e.CHEMIST_IN_CODE, e.CHEMIST_CODE, e.CHEMIST_IN_REPLY, e.CHEMIST_IN_ADOPT, e.CHEMIST_ANS_CODE, e.ANS_DATE, NVL(e.COUNT1,0) as CHEMIST_ANS_LIKE
 from(
 select a.CHEMIST_ANS_CODE, a.CHEMIST_IN_CODE, b.MEM_ID, a.CHEMIST_CODE, a.CHEMIST_IN_REPLY, a.CHEMIST_IN_ADOPT, a.ANS_DATE
    ,RANK() OVER (PARTITION BY a.CHEMIST_ANS_CODE ORDER BY b.MEM_ID DESC) RANK1
    , d.COUNT1
		from che_in_ans a LEFT OUTER JOIN CHE_IN_RECOM b
                on a.CHEMIST_ANS_CODE = b.CHEMIST_ANS_CODE
        LEFT OUTER JOIN (
        (SELECT COUNT(*) AS COUNT1, CHEMIST_ANS_CODE FROM CHE_IN_RECOM
        GROUP BY CHEMIST_ANS_CODE)
        )d on b.CHEMIST_ANS_CODE = d.CHEMIST_ANS_CODE ) e
where e.RANK1 =1 and e.chemist_in_code = 2
order by  e.CHEMIST_IN_ADOPT desc, e.chemist_ans_code asc)f, CHEMIST g, MEMBER t
where f.CHEMIST_CODE = g.CHEMIST_CODE and t.MEM_ID = g.MEM_ID

	</select>



	<select id="countReply" resultType="int">
		select count(chemist_in_code)
		from che_in_ans
		where chemist_in_code=#{chemist_in_code}
	</select>

	<update id="insertReply" >

		insert into che_in_ans(
			CHEMIST_IN_CODE
			,CHEMIST_CODE
			,CHEMIST_IN_REPLY
			,CHEMIST_IN_ADOPT
			,CHEMIST_ANS_CODE
			,ANS_DATE)
		values(#{chemistInCode},#{chemistCode},#{chemistInReply},'N',#{chemistAnsCode},sysdate)
	</update>

	<update id="updateReply" parameterType="reply">
		update che_in_ans
		set
		chemist_in_reply=#{chemistInReply},
		ANS_DATE=sysdate
		where chemist_ans_code=#{chemistAnsCode}
	</update>

	<update id="deleteReply" parameterType="int">
		delete from che_in_ans
		where chemist_ans_code=#{chemistAnsCode}
	</update>






	<!-- 약사인 좋아요 -->


	<!-- 좋아요 insert -->
	<update id="insertCheInRecom" parameterType="reply">
		INSERT INTO che_in_recom (
		    chemist_ans_code,
		    chemist_in_code,
		    mem_id,
		    chemist_code
		) VALUES (
		    #{chemistAnsCode},
		    #{chemistInCode},
		    #{memId},
		    #{chemistCode}
		)
	</update>

	<!-- 해당답변 좋아요 갯수 -->
	<select id="selectCheInRecom" resultType="int" parameterType="reply">
		SELECT count(*) AS CHEMIST_ANS_LIKE
			FROM che_in_recom
		WHERE CHEMIST_ANS_CODE = #{chemistAnsCode}
	</select>

	<!-- 존재여부체크 -->
	<select id="CheckCheInRecom" resultType="int" parameterType="reply">
		SELECT count(*) AS CHEMIST_ANS_LIKE
			FROM che_in_recom
		WHERE CHEMIST_ANS_CODE = #{chemistAnsCode} AND MEM_ID=#{memId}
	</select>

	<!-- 좋아요 delete -->
	<update id="deleteCheInRecom" parameterType="reply">
		DELETE FROM che_in_recom
			WHERE
		        chemist_ans_code = #{chemistAnsCode}
		    AND mem_id = #{memId}
	</update>




</mapper>







